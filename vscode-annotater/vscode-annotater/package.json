{
  "name": "vscode-annotater",
  "displayName": "vscode-annotater",
  "description": "\"Allows the user to store annotation information about their code via http request to a backend\"",
  "version": "0.0.4",
  "engines": {
    "vscode": "^1.71.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onFileSystem:file",
    "onStartupFinished"
  ],
  "main": "./extension.js",
  "contributes": {
    "configuration": {
      "title": "VSCode Annotater",
      "properties": {
        "vscodeAnnotater.data.folder": {
          "type": "string",
          "default": "~/",
          "description": "Folder where local data will be written out to."
        },
        "vscodeAnnotater.elasticsearch.enable": {
          "type": "boolean",
          "default": "false",
          "description": "When set to true, the extension will store annotations in elasticsearch at the provided address. When set to false, the extension will write annotations out to a local JSON file."
        },
        "vscodeAnnotater.elasticsearch.address": {
          "type": "string",
          "default": "http://localhost:9200/",
          "description": "Address of the elasticsearch service to store annotations in."
        },
        "vscodeAnnotater.askem.skema.code2fnaddress": {
          "type": "string",
          "default": "http://localhost:8002/",
          "description": "Address of the SKEMA code2fn service for use with the 'Send code to SKEMA' command."
        },
        "vscodeAnnotater.askem.skema.address": {
          "type": "string",
          "default": "http://localhost:8085/",
          "description": "Address of the SKEMA service for use with the 'Send code to SKEMA' command."
        },
        "vscodeAnnotater.askem.mit.address": {
          "type": "string",
          "default": "http://100.26.10.46/",
          "description": "Address of MIT's Annotation API that includes endpoints to send code to GPT LLM"
        },
        "vscodeAnnotater.askem.mit.gpt_key": {
          "type": "string",
          "default": "",
          "description": "GPT key necessary to use MIT code reading service."
        }
      }
    },
    "commands": [
      {
        "command": "vscode-annotater.annotate",
        "title": "Annotate"
      },
      {
        "command": "vscode-annotater.openBrowser",
        "title": "Open Browser"
      },
      {
        "command": "vscode-annotater.sendSelection",
        "title": "Send code to SKEMA"
      },
      {
        "command": "vscode-annotater.reload",
        "title": "Reload Annotations"
      },
      {
        "command": "vscode-annotater.uploadFile",
        "title": "Send to TA1"
      },
      {
        "command": "vscode-annotater.grometHighlight",
        "title": "Gromet Sample"
      },
      {
        "command": "vscode-annotater.sendToMIT",
        "title": "Send to MIT"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "command": "vscode-annotater.uploadFile",
          "group": "annotaterGroup@1"
        }
      ],
      "editor/context": [
        {
          "when": "editorHasSelection",
          "command": "vscode-annotater.annotate",
          "group": "annotaterGroup@1"
        },
        {
          "when": "editorHasSelection",
          "command": "vscode-annotater.sendSelection",
          "group": "annotaterGroup@1"
        },
        {
          "when": "editorHasSelection",
          "command": "vscode-annotater.sendToMIT",
          "group": "annotaterGroup@1"
        },
        {
          "when": "editorHasSelection",
          "command": "vscode-annotater.openBrowser",
          "group": "annotaterGroup@1"
        }
      ]
    }
  },
  "scripts": {
    "lint": "eslint .",
    "pretest": "npm run lint",
    "test": "node ./test/runTest.js",
    "vscode:prepublish": "npm run esbuild-base -- --minify",
    "esbuild-base": "esbuild ./extension.js --bundle --outfile=out/main.js --external:vscode --format=cjs --platform=node",
    "esbuild": "npm run esbuild-base -- --sourcemap",
    "esbuild-watch": "npm run esbuild-base -- --sourcemap --watch",
    "test-compile": "tsc -p ./"
  },
  "devDependencies": {
    "@types/glob": "^7.2.0",
    "@types/mocha": "^9.1.1",
    "@types/node": "16.x",
    "@types/vscode": "^1.71.0",
    "@vscode/test-electron": "^2.1.5",
    "esbuild": "^0.15.10",
    "eslint": "^8.20.0",
    "glob": "^8.0.3",
    "mocha": "^10.0.0",
    "typescript": "^4.7.4"
  },
  "dependencies": {
    "node-fetch": "2.6.7"
  }
}